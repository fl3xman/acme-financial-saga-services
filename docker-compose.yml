version: '3'
services:
  api:
    build:
      context: ./
      dockerfile: ./acme-api-gateway/Dockerfile
    image: acme-services/acme-api-gateway
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - ROOT_PAYMENT=http://payment:3001
      - ROOT_ACCOUNT=http://account:3002
  payment:
    build:
      context: ./
      dockerfile: ./acme-payments/Dockerfile
    image: acme-services/acme-payments
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - SPRING_PROFILES_ACTIVE=psql
      - KAFKA_SERVER=broker:9092
      - PSQL_URL=postgres-payment
    depends_on:
      - postgres-payment
      - broker
  account:
    build:
      context: ./
      dockerfile: ./acme-accounts/Dockerfile
    image: acme-services/acme-accounts
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - SPRING_PROFILES_ACTIVE=psql
      - KAFKA_SERVER=broker:9092
      - PSQL_URL=postgres-account
    depends_on:
      - postgres-account
      - broker
  postgres-payment:
    image: postgres:alpine
    restart: always
    expose:
      - 5432
    environment:
      - POSTGRES_USER=payment
      - POSTGRES_PASSWORD=payment
      - POSTGRES_DB=paymentdb
  postgres-account:
    image: postgres:alpine
    restart: always
    expose:
      - 5432
    environment:
      - POSTGRES_USER=account
      - POSTGRES_PASSWORD=account
      - POSTGRES_DB=accountdb
  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-enterprise-kafka:5.3.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  schema-registry:
    image: confluentinc/cp-schema-registry:5.3.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'